# =============================================================================
# DJANGO PROJECT GITIGNORE
# =============================================================================
# This file tells Git which files and directories to ignore
# It keeps your repository clean by excluding temporary, generated, and sensitive files

# =============================================================================
# PYTHON FILES
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the .idea directory in version control.
# .idea/

# =============================================================================
# DJANGO SPECIFIC
# =============================================================================

# Django database files
*.sqlite3
*.sqlite3-journal
*.db

# Django static files (if collected)
staticfiles/
static_collected/

# Django media files
media/

# Django local settings
local_settings.py
settings_local.py

# Django migrations (uncomment if you want to ignore them)
# migrations/

# Django cache
.cache/

# Django logs
logs/
*.log

# Django test coverage
htmlcov/
.coverage
.coverage.*

# =============================================================================
# VIRTUAL ENVIRONMENTS
# =============================================================================

# Virtual environment directories
venv/
env/
.venv/
.env/
ENV/
env.bak/
venv.bak/

# Virtual environment activation scripts
activate
activate.bat
activate.fish
activate.ps1

# =============================================================================
# IDE AND EDITOR FILES
# =============================================================================

# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm / IntelliJ IDEA
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# Brackets
.brackets.json

# =============================================================================
# OPERATING SYSTEM FILES
# =============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# DEVELOPMENT AND BUILD TOOLS
# =============================================================================

# Node.js (if you add any frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# Bower
bower_components/

# Grunt
.grunt/

# Gulp
.gulp/

# Webpack
webpack.config.js
webpack.mix.js

# =============================================================================
# SECURITY AND SENSITIVE FILES
# =============================================================================

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# API keys and secrets
secrets.json
config.json
*.key
*.pem
*.p12
*.pfx

# Database credentials
database.yml
db_config.py

# =============================================================================
# TEMPORARY AND CACHE FILES
# =============================================================================

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig

# Cache directories
.cache/
cache/
tmp/
temp/

# =============================================================================
# LOGS AND DEBUGGING
# =============================================================================

# Log files
*.log
logs/
log/

# Debug files
*.debug
debug/

# =============================================================================
# TESTING AND COVERAGE
# =============================================================================

# Test coverage reports
htmlcov/
.coverage
.coverage.*
coverage.xml
*.cover
.pytest_cache/

# Test databases
test_db.sqlite3
test_*.db

# =============================================================================
# DEPLOYMENT AND PRODUCTION
# =============================================================================

# Production settings
production.py
staging.py

# Deployment files
deploy/
deployment/
*.deploy

# Server configuration
nginx.conf
apache.conf
*.conf

# =============================================================================
# BACKUP AND ARCHIVE FILES
# =============================================================================

# Backup files
*.backup
*.bak
*.old
*.orig
*.save

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# =============================================================================
# CUSTOM PROJECT FILES
# =============================================================================

# Add any project-specific files or directories here
# For example:
# custom_uploads/
# external_data/
# backup_files/

# =============================================================================
# NOTES
# =============================================================================

# This .gitignore file is comprehensive and covers most Django development scenarios.
# If you need to ignore additional files, add them at the bottom of this file.
# 
# Remember: It's better to be more specific than too broad when ignoring files.
# When in doubt, check what files are being tracked with: git status
