# =============================================================================
# DJANGO PRODUCTION DOCKER COMPOSE
# =============================================================================
# This file sets up a production-ready Django application with:
# - Django app running on gunicorn
# - Nginx for static files and reverse proxy
# - PostgreSQL database (optional, can be commented out)
# - Redis for caching (optional, can be commented out)

version: '3.8'

services:
  # =============================================================================
  # DJANGO APPLICATION
  # =============================================================================
  web:
    build: .
    container_name: htmx_demo_web
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=htmx_demo.production
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      # Database settings (uncomment if using PostgreSQL)
      # - DATABASE_URL=postgresql://postgres:password@db:5432/htmx_demo
      # - REDIS_URL=redis://redis:6379/0
    volumes:
      # Mount static files for nginx to serve
      - static_volume:/app/staticfiles
      # Mount media files if needed
      - media_volume:/app/media
    depends_on: []
    networks:
      - htmx_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # NGINX REVERSE PROXY
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: htmx_demo_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # For HTTPS (uncomment SSL config below)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      # SSL certificates (uncomment for HTTPS)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - htmx_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # POSTGRESQL DATABASE (OPTIONAL)
  # =============================================================================
  # Uncomment this section if you want to use PostgreSQL instead of SQLite
  # db:
  #   image: postgres:15-alpine
  #   container_name: htmx_demo_db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=htmx_demo
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - htmx_network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # =============================================================================
  # REDIS CACHE (OPTIONAL)
  # =============================================================================
  # Uncomment this section if you want to use Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: htmx_demo_redis
  #   restart: unless-stopped
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - htmx_network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  static_volume:
    driver: local
  media_volume:
    driver: local
  # Uncomment if using PostgreSQL
  # postgres_data:
  #   driver: local
  # Uncomment if using Redis
  # redis_data:
  #   driver: local

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  htmx_network:
    driver: bridge
